		  
-- Roo log
query Ecore2Roo = Ecore!EPackage.allInstances() ->
    iterate(package; acc: String = '' | acc + package.toString() + '\n') ->
    	println();    
	--writeTo('c:/tmp/ROO_PAPER');
		
uses Enum;
uses Annotation;
uses Entity;

-- Project
helper context Ecore!EPackage def: toString(): String =
    if self.name <> 'ecore' then 
		'project' +
	
		-- Roo structure
		self.eAnnotations -> 
			iterate(annotation; acc: String = '' | acc + annotation.getRooDetails()) + '\n\n' +
		
		-- Persistence setup
		'persistence setup ' + self.eAnnotations ->
			iterate(annotation; acc: String = '' | acc + annotation.getModelCommand('persistenceSetup')) + '\n\n' +
		
		--1° Enums
		self.eClassifiers -> select(c | c.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(c; acc: String = '' | acc + c.toString() + '\n') +
		
		--2° Entities
		self.eClassifiers -> select(c | not c.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(c; acc: String = '' | acc + c.toString() + '\n') + '\n' +
		
		--3° Attributes, references, etc.
		self.eClassifiers -> select(c | not c.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(c; acc: String = '' | acc + c.featuresToString() + '\n') +
			
		--Roo commands
		self.eAnnotations -> 
			iterate(annotation; acc: String = '' | acc + annotation.getModelCommands())
		
    else ''
    endif;