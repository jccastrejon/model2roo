--
-- Copyright 2010 jccastrejon, rosatzimba
--  
-- This file is part of Model2Roo.
--
-- Model2Roo is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- Model2Roo is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.

-- You should have received a copy of the GNU General Public License
-- along with Model2Roo.  If not, see <http://www.gnu.org/licenses/>.
--

-- Roo log
query Ecore2Roo = Ecore!EPackage.allInstances() ->
    iterate(package; acc: String = '' | acc + package.toString() + '\n') -> println();
		
uses Enum;
uses Annotation;
uses Entity;

-- Project
helper context Ecore!EPackage def: toString(): String =
    if self.name <> 'ecore' then 
		'project ' +
	
		-- Roo structure and Persistence setup
		if self.eAnnotations -> isEmpty() then
			'--topLevelPackage ' + 'topLevelPackage'.getDefaultProperties() + '.' + self.name + '\n\n' +
			'persistence setup' + ' --provider ' + 'persistenceProvider'.getDefaultProperties() 
								 +	' --database ' + 'persistenceDatabase'.getDefaultProperties()
		else
			self.eAnnotations -> 
				iterate(annotation; acc: String = '' | acc + annotation.getRooDetails()) + '\n\n' +
			
			'persistence setup ' + self.eAnnotations ->
				iterate(annotation; acc: String = '' | acc + annotation.getModelCommand('persistence', ''))
		endif
		
		+ '\n\n' +
		
		-- 1. Enums
		self.eClassifiers -> select(c | c.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(c; acc: String = '' | acc + c.toString() + '\n') +
		
		-- 2. Entities
		self.eClassifiers -> select(c | not c.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(c; acc: String = '' | acc + c.toString() + '\n') + '\n' +
		
		-- 3. Attributes, references, etc.
		self.eClassifiers -> select(c | not c.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(c; acc: String = '' | acc + c.featuresToString() + '\n') +
			
		-- System Roo commands
		if self.eAnnotations -> isEmpty() then
			'controllersAll'.getMapping() + ' ' + 'controllersAll'.getDefaultProperties()
		else
			self.eAnnotations -> 
				iterate(annotation; acc: String = '' | acc + annotation.getModelCommands(''))
		endif
		
		+ '\n\n' +
		
		-- Entities Roo commands
		self.eClassifiers -> select(class | not class.oclIsTypeOf(Ecore!EEnum)) ->
			iterate(class; acc: String = '' | 
				if not class.eAnnotations -> isEmpty() then
					acc + class.eAnnotations -> 
						iterate(annotation; accAn: String = '' | accAn + annotation.getModelCommands(class.name) + '\n')
				else ''
				endif)
		
    else ''
    endif;